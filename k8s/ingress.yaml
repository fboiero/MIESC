apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: miesc-ingress
  namespace: miesc
  labels:
    app: miesc
  annotations:
    # NGINX Ingress annotations
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"

    # Rate limiting
    nginx.ingress.kubernetes.io/limit-rps: "10"
    nginx.ingress.kubernetes.io/limit-burst-multiplier: "5"

    # Timeouts (for long-running analysis)
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"

    # CORS (if needed)
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"

    # Let's Encrypt (if using cert-manager)
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx

  tls:
  - hosts:
    - miesc.example.com
    secretName: miesc-tls-cert

  rules:
  - host: miesc.example.com
    http:
      paths:
      # Main API
      - path: /
        pathType: Prefix
        backend:
          service:
            name: miesc-service
            port:
              number: 8080

      # Metrics (restrict access in production!)
      - path: /metrics
        pathType: Prefix
        backend:
          service:
            name: miesc-service
            port:
              number: 9090
