{
  "examples": [
    {
      "name": "Complete Audit Request",
      "description": "Execute full security audit on a contract",
      "request": {
        "jsonrpc": "2.0",
        "id": "audit-001",
        "method": "run_audit",
        "params": {
          "contract_path": "examples/reentrancy_simple.sol",
          "tools": ["slither", "mythril", "aderyn"],
          "enable_ai_triage": true
        }
      },
      "expected_response": {
        "jsonrpc": "2.0",
        "id": "audit-001",
        "result": {
          "contract": "examples/reentrancy_simple.sol",
          "scan_results": {
            "total_findings": 15,
            "findings_by_severity": {
              "Critical": 1,
              "High": 2,
              "Medium": 5,
              "Low": 7
            }
          },
          "correlated_findings": [],
          "compliance_matrix": {
            "compliance_score": 65.5,
            "standards_coverage": {}
          },
          "agent_id": "miesc-agent-v3.0.0",
          "timestamp": "2025-01-01T00:00:00Z"
        }
      }
    },
    {
      "name": "AI Correlation Request",
      "description": "Apply AI correlation to existing findings",
      "request": {
        "jsonrpc": "2.0",
        "id": "correlate-001",
        "method": "correlate_findings",
        "params": {
          "findings": [
            {
              "tool": "slither",
              "vulnerability_type": "reentrancy-eth",
              "severity": "High",
              "location": {"file": "contract.sol", "line": 42}
            },
            {
              "tool": "mythril",
              "vulnerability_type": "Reentrancy",
              "severity": "High",
              "location": {"file": "contract.sol", "line": 43}
            }
          ],
          "contract_source": "pragma solidity ^0.8.0; ..."
        }
      },
      "expected_response": {
        "jsonrpc": "2.0",
        "id": "correlate-001",
        "result": {
          "correlated_findings": [],
          "original_count": 2,
          "correlated_count": 1,
          "reduction_rate": 0.5
        }
      }
    },
    {
      "name": "Compliance Mapping Request",
      "description": "Map findings to security standards",
      "request": {
        "jsonrpc": "2.0",
        "id": "compliance-001",
        "method": "map_compliance",
        "params": {
          "findings": [
            {
              "vulnerability_type": "reentrancy-eth",
              "severity": "High"
            }
          ]
        }
      },
      "expected_response": {
        "jsonrpc": "2.0",
        "id": "compliance-001",
        "result": {
          "compliance_matrix": {
            "total_findings": 1,
            "compliance_score": 80.0,
            "standards_coverage": {
              "cwe": ["CWE-841"],
              "swc": ["SWC-107"],
              "owasp": ["SC01-Reentrancy"],
              "iso27001": ["A.8.8", "A.14.2.5"]
            }
          }
        }
      }
    },
    {
      "name": "Metrics Calculation Request",
      "description": "Calculate validation metrics",
      "request": {
        "jsonrpc": "2.0",
        "id": "metrics-001",
        "method": "calculate_metrics",
        "params": {
          "predictions": [1, 1, 0, 1, 0, 0, 1, 1],
          "ground_truth": [1, 1, 0, 1, 1, 0, 0, 1]
        }
      },
      "expected_response": {
        "jsonrpc": "2.0",
        "id": "metrics-001",
        "result": {
          "precision": 0.8000,
          "recall": 0.7500,
          "f1_score": 0.7742,
          "cohens_kappa": 0.5385
        }
      }
    },
    {
      "name": "Report Generation Request",
      "description": "Generate formatted audit report",
      "request": {
        "jsonrpc": "2.0",
        "id": "report-001",
        "method": "generate_report",
        "params": {
          "audit_results": {
            "contract": "MyToken.sol",
            "findings": [],
            "compliance_score": 85.0
          },
          "format": "html"
        }
      },
      "expected_response": {
        "jsonrpc": "2.0",
        "id": "report-001",
        "result": {
          "report_path": "analysis/results/miesc_report_20250101_120000.html",
          "format": "html",
          "generated_at": "2025-01-01T12:00:00Z"
        }
      }
    },
    {
      "name": "Status Query Request",
      "description": "Get agent status and capabilities",
      "request": {
        "jsonrpc": "2.0",
        "id": "status-001",
        "method": "get_status",
        "params": {}
      },
      "expected_response": {
        "jsonrpc": "2.0",
        "id": "status-001",
        "result": {
          "agent_id": "miesc-agent-v3.0.0",
          "protocol_version": "mcp/1.0",
          "status": "active",
          "capabilities": [
            {
              "name": "run_audit",
              "description": "Execute comprehensive multi-tool security audit",
              "category": "analysis"
            },
            {
              "name": "correlate_findings",
              "description": "Apply AI correlation to reduce false positives",
              "category": "correlation"
            }
          ],
          "components": {
            "core": "active",
            "ai_correlator": "active",
            "policy_mapper": "active",
            "context_bus": "connected"
          },
          "timestamp": "2025-01-01T12:00:00Z"
        }
      }
    }
  ],
  "usage_notes": {
    "authentication": "Include 'X-MIESC-API-Key' header if authentication is enabled",
    "rate_limiting": "Default: 60 requests per minute per IP",
    "error_codes": {
      "-32700": "Parse error - Invalid JSON",
      "-32600": "Invalid Request - Missing required fields",
      "-32601": "Method not found",
      "-32602": "Invalid params",
      "-32603": "Internal error",
      "-32000": "Server error - MIESC execution failed"
    },
    "websocket": {
      "url": "ws://localhost:8080/mcp/ws",
      "description": "Real-time bidirectional communication",
      "message_format": "Same JSON-RPC format as HTTP endpoint"
    }
  }
}
