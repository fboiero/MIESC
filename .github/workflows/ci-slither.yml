name: Slither Static Analysis

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/contracts/**/*.sol'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/contracts/**/*.sol'

jobs:
  slither:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Slither
        run: |
          pip install slither-analyzer==0.10.0
          pip install solc-select
          solc-select install 0.8.20
          solc-select use 0.8.20

      - name: Run Slither Analysis
        run: |
          mkdir -p analysis/slither/results
          slither src/contracts/ \
            --json analysis/slither/results/slither-report.json \
            --checklist \
            --markdown-root $GITHUB_WORKSPACE \
            || true

      - name: Upload Slither Results
        uses: actions/upload-artifact@v4
        with:
          name: slither-results
          path: analysis/slither/results/

      - name: Parse Results
        run: |
          python - <<EOF
          import json
          import sys

          with open('analysis/slither/results/slither-report.json') as f:
              data = json.load(f)

          critical = sum(1 for r in data['results']['detectors'] if r['impact'] == 'High')
          high = sum(1 for r in data['results']['detectors'] if r['impact'] == 'Medium')

          print(f"Critical: {critical}, High: {high}")

          if critical > 0:
              print(f"::error::Found {critical} critical issues")
              sys.exit(1)
          EOF
